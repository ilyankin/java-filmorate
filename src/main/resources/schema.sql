CREATE TABLE IF NOT EXISTS USERS (
    id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    email VARCHAR(255) NOT NULL,
    login VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    birthday DATE,
    CONSTRAINT EMAIL_UNIQUE UNIQUE(email),
    CONSTRAINT LOGIN_UNIQUE UNIQUE(login)
);

CREATE TABLE IF NOT EXISTS GENRES (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS (
    id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(2047),
    release_date DATE,
    duration INT,
    rate INT,
    mpa ENUM('G', 'PG', 'PG-13', 'R', 'NC-17') NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
    film_id BIGINT NOT NULL,
    genre_id INT NOT NULL,
    CONSTRAINT PK_FILM_GENRES PRIMARY KEY (film_id, genre_id),
    CONSTRAINT FK_FILM_GENRES_FILM_ID FOREIGN KEY (film_id) REFERENCES FILMS(id) ON DELETE CASCADE,
    CONSTRAINT FK_FILM_GENRES_GENRE_ID FOREIGN KEY (genre_id) REFERENCES GENRES(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FILM_LIKES (
    film_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT PK_FILM_LIKES PRIMARY KEY (film_id, user_id),
    CONSTRAINT FK_FILM_LIKES_FILM_ID FOREIGN KEY (film_id) REFERENCES FILMS(id) ON DELETE CASCADE,
    CONSTRAINT FK_FILM_LIKES_USER_ID FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS (
    user_id BIGINT NOT NULL,
    friend_id BIGINT NOT NULL,
    confirmed BOOLEAN NOT NULL,
    min_id BIGINT AS LEAST(user_id, friend_id),
    max_id BIGINT AS GREATEST(user_id, friend_id),
    CONSTRAINT MIN_MAX_IDS_UNIQUE UNIQUE (min_id, max_id),
    CONSTRAINT PK_FRIENDSHIPS PRIMARY KEY (user_id, friend_id),
    CONSTRAINT FK_FRIENDSHIPS_USER_ID FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,
    CONSTRAINT FK_FRIENDSHIPS_FRIEND_ID FOREIGN KEY (friend_id) REFERENCES USERS(id) ON DELETE CASCADE
);